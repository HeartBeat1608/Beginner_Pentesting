#!/bin/bash

# This script autogenerates the default pentesting and reporting template for me so that I don't have to make the folders and files myself. 
# It also adds template stuff to the files so it is easy to work with.

usage="Usage: ./init.sh <machine_ip> <machine_name> <target_directory> [tester_name]"

m_ip=$1
m_name=$2
t_dir=$3
tester_name=$4

function isempty() {
	if [ ! -z "$1" -a "$1" != " " ]; then
		return 1;
	fi	
	return -1;
}

echo "Checking Machine IP"
isempty $m_ip

if [[ $? -ne 1 ]]; then
	echo $usage;
	exit;
fi

echo "Checking Machine Name"
isempty $m_name

if [[ $? -ne 1 ]]; then
	echo $usage;
	exit;
fi

echo "Checking Target Directory"
isempty $t_dir

if [[ $? -ne 1 ]]; then
	echo $usage;
	exit;
fi

isempty $tester_name

if [[ $? -ne 1 ]]; then
	tester_name="$(whoami)"
fi


echo "Preliminary Checks PASSED"

echo "Generating Workspace"
w_dir="$t_dir/$m_name"

mkdir "$w_dir"
mkdir "$w_dir/nmap"
mkdir "$w_dir/exploits"
mkdir "$w_dir/scripts"
mkdir "$w_dir/notes"

echo "Generating README.md"
shopt -s globstar

readme_content_head="# REPORTING - $m_name"
readme_content_div="-----------"
readme_content_subhead="> $tester_name | $(date | cut -d " " -f1,2,3,4)"
remote_loc="$w_dir/README.md"

cp README_PARTIAL.md $remote_loc

printf '%s\n' 0a "$readme_content_head" "$readme_content_div" "$readme_content_subhead" . w | ed -s "$remote_loc"

echo "Placing Files"
echo "$m_ip" > "$w_dir/target.txt"
cp Creds.md "$w_dir/notes"
cp Enum.md "$w_dir/notes"

echo "All Done."
echo "------------------------"
echo "Start Hacking... !!!"
